// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Favorites Should match the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Favorites
    favorites={Array []}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="Favs"
>
        <Button
                className="favs-button"
                controlFunc={undefined}
                name="View Favorites"
        />
        <p>
                 No Favorites Saved: 
                0
        </p>
</div>,
      "className": "Favorites",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Button
            className="favs-button"
            controlFunc={undefined}
            name="View Favorites"
/>,
          <p>
             No Favorites Saved: 
            0
</p>,
        ],
        "className": "Favs",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "favs-button",
            "controlFunc": undefined,
            "name": "View Favorites",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              " No Favorites Saved: ",
              0,
            ],
          },
          "ref": null,
          "rendered": Array [
            " No Favorites Saved: ",
            0,
          ],
          "type": "p",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="Favs"
>
          <Button
                    className="favs-button"
                    controlFunc={undefined}
                    name="View Favorites"
          />
          <p>
                     No Favorites Saved: 
                    0
          </p>
</div>,
        "className": "Favorites",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Button
              className="favs-button"
              controlFunc={undefined}
              name="View Favorites"
/>,
            <p>
               No Favorites Saved: 
              0
</p>,
          ],
          "className": "Favs",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "favs-button",
              "controlFunc": undefined,
              "name": "View Favorites",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                " No Favorites Saved: ",
                0,
              ],
            },
            "ref": null,
            "rendered": Array [
              " No Favorites Saved: ",
              0,
            ],
            "type": "p",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
